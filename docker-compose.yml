version: '3.9'

services:
  web:
    container_name: web
    build: .
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env

  db:
    container_name: db
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./.env

  redis:
    container_name: redis
    image: redis:7.4
    restart: always
    ports:
      - "6379:6379"
    env_file: "./.env"
    volumes:
      - ./redis/data:/root/redis
#      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf

  celery:
    container_name: celery
    build: .
    command: sh -c "celery -A config worker --loglevel=INFO -B"
    restart: on-failure
    env_file: "./.env"
    environment:
      PG_DB_HOST: db
#      broker_url: amqp://guest:guest@bo-rabbitmq:5672
    depends_on:
      - db
      - redis

  celery-beat:
    container_name: celery-beat
    build: .
    command: bash -c "celery -A config beat --loglevel=INFO"
    volumes:
      - .:/app
    env_file:
      - ./.env
    restart: on-failure
    depends_on:
      - celery
      - redis

volumes:
  postgres_data:
  static_volume: